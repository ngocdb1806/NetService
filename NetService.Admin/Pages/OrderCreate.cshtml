@page "/order/create"
@{
    ViewData["Title"] = "Tạo đơn";
}
<style>

    table.shoping-cart-table tr td:last-child {
        width: 140px;
    }

</style>
<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>@ViewData["Title"]</h2>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="index-2.html">Trang chủ</a>
            </li>
            <li class="breadcrumb-item active">
                <strong>@ViewData["Title"]</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">

    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="ibox ">
            <div class="ibox-title">
                <h5>Tạo đơn</h5>
                <div class="ibox-tools">
                    
                </div>
            </div>
            <div class="ibox-content">
                <form id="frmCreateOrder">
                    <div class="form-group row">
                        <label class="col-sm-2 col-form-label">Chọn khách hàng:</label>
                        <div class="col-sm-10">
                            <select id="customerId" class="form-control m-b" name="customerId"></select>
                        </div>
                    </div>

                    <div class="row">
                        <table class="footable table table-stripped toggle-arrow-tiny footable-loaded tablet breakpoint" id="tbl_inventory_products" data-page-size="15">
                            <thead>
                                <tr>
                                    <th>Tên sản phẩm</th>
                                    <th>Tồn kho</th>
                                    <th>Giá nhập</th>
                                    <th>Tình trạng</th>
                                    <th>Giá bán</th>
                                    <th>Số lượng bán</th>
                                    <th>Tổng tiền</th>
                                    <th>Hành động</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>

                    </div>

                    <div class="hr-line-dashed"></div>
                    <!--Cart area-->
                    <div class="row">
                        <div class="ibox container">
                            <div class="ibox-title">
                                <span class="float-right"> (<strong id="cart-all-price">0</strong>) VNĐ | (<strong id="cart-number-of-elements">0</strong>) sản phẩm</span>
                                <h5>Giỏ hàng hiện tại</h5>
                            </div>
                            <div class="cart-ele-area">

                            </div>
                            <div class="ibox-content">
                                <button class="btn btn-primary float-right" type="button" onclick="createOrder();"><i class="fa fa fa-shopping-cart"></i> Tạo đơn</button>

                            </div>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
<script type="text/javascript">var removeElementFromCart = (id = 0) => {
        var rmElement = $(".cart-ele-area").children(`.ibox-content[data-cart-ele-id=${id}]`)
        if (rmElement.length > 0) {
            rmElement.remove();
        }
    };

    function calculateAllPrice() {
        var allCartEle = $(".cart-ele-area").children();
        var allPrice = 0;
        for (var cartEle of allCartEle) {
            var productId = Number.parseInt($(cartEle).attr("data-cart-ele-id"));
            allPrice += Number.parseFloat($(`#${productId}-totalprice`).text());
        }
        return allPrice;
    }

    function removeAllCartElementHandler() {
        var allCartEle = $(".cart-ele-area").children();
        for (var cartEle of allCartEle) {
            var id = $(cartEle).attr("data-cart-ele-id");
            removeElementFromCart(id);
        }
        $("#cart-number-of-elements").text($(".cart-ele-area").children().length);
        $("#cart-all-price").text(calculateAllPrice());
    };
    function removeCartElementHandler(ele) {
        var id = ele.dataset["productId"];
        removeElementFromCart(id);
        $("#cart-number-of-elements").text($(".cart-ele-area").children().length);
        $("#cart-all-price").text(calculateAllPrice());
    };
    function createOrder() {
        var orderObj = {
            customerId: $("#customerId").val(),
            customerStoreId: srsn.Utils.GetCurrentLogin().storeId,
            //orderDate: '2019-03-24T06:17:08.213Z',
            staffId: srsn.Utils.GetCurrentLogin().id,
            status: true
        };
        var listOrderDetail = [];
        var allCartEle = $(".cart-ele-area").children();
        for (var cartEle of allCartEle) {
            var productId = Number.parseInt($(cartEle).attr("data-cart-ele-id"));
            var orderDetailObj = {
                discount: 0,
                orderCustomerId: $("#customerId").val(),
                orderStaffId: srsn.Utils.GetCurrentLogin().id,
                productId: productId,
                productName: $(`#${productId}-productname`).attr("data-product-name"),
                quantity: $(`#${productId}-quantity`).val(),
                typeOrder: "Directly",
                unitPrice: $(`#${productId}-saleprice`).text()
            };
            listOrderDetail.push(orderDetailObj);
        }
        orderObj.orderDetails = listOrderDetail;

        srsn.Utils.CreateOrder(orderObj)
            .then(function (data) {
                if (data && data > 0) {
                    swal({
                        title: "Tạo đơn",
                        message: "Bạn đã thành công tạo đơn!",
                        type: "success"
                    },
                        function (isConfirm) {
                            if (isConfirm) {
                                removeAllCartElementHandler();
                                return true;
                            }
                            return false;
                        });
                }
            })
            .catch(function (e) {
                console.log(e);
            });
    };

    (async function () {
        /* Begin: init datatable products*/
        var listAllProducts = getTempDatas.GetAllProducts;
        $("#tbl_inventory_products").dataTable({
            lengthMenu: [5, 10],
            data: listAllProducts,
            columns: [
                { data: 'productName' },
                { data: 'quantityInStock' },
                { data: 'costPrice' },
                {
                    data: 'status',
                    render: function (data, type, full, meta) {
                        if (data) {
                            return `<span class="label label-primary">Enable</span>`;
                        } else {
                            return `<span class="label label-danger">Disabled</span>`;
                        }
                    }
                },
                { data: 'salePrice' },
                {
                    data: 'id',
                    sortable: false,
                    render: function (data, type, full, meta) {
                        return `<input type="number" min="0" data-product-id="${data}" data-sale-price="${full['salePrice']}" class="product-order-quantity" value="0" />`;
                    }
                },
                {
                    data: 'id',
                    sortable: false,
                    render: function (data, type, full, meta) {
                        return `<label data-product-id="${data}"  class="product-total-price">0</label>`;
                    }
                },
                {
                    data: 'id',
                    sortable: false,
                    render: function (data, type, full, meta) {
                        return `<button type="button" data-product-id="${data}" class="btn btn-mall btn-success btn-update-cart">Cập nhật giỏ hàng</button>`;
                    }
                },
            ],
            fixedHeader: {
                header: true,
                footer: true
            },
            "language": {
                "decimal": "",
                "emptyTable": "Khong co du lieu",
                "info": "Xuat hien tu _START_ den _END_ trong _TOTAL_ du lieu",
                "infoEmpty": "Xuat hien tu 0 den 0 trong 0 du lieu",
                "infoFiltered": "(Loc tu _MAX_ du lieu)",
                "infoPostFix": "",
                "thousands": ",",
                "lengthMenu": "Xuat hien _MENU_ du lieu",
                "loadingRecords": "Dang cho...",
                "processing": "Dang xu ly...",
                "search": "Tim kiem:",
                "zeroRecords": "Khong tim thay tap du lieu mong muon",
                "paginate": {
                    "first": "Đầu",
                    "last": "Cuối",
                    "next": "Tới",
                    "previous": "Lui"
                },
                "aria": {
                    "sortAscending": ": activate to sort column ascending",
                    "sortDescending": ": activate to sort column descending"
                }
            },
            drawCallback: function (settings) {
                // update total price
                $(".product-order-quantity").on("change", function (e) {
                    var currentProductId = Number.parseInt($(e.target).attr("data-product-id"));
                    var currentSalePrice = Number.parseFloat($(e.target).attr("data-sale-price"));
                    var currentQuantity = Number.parseFloat($(e.target).val());
                    var label = $(`.product-total-price[data-product-id=${currentProductId}]`);
                    label.text(`${currentQuantity * currentSalePrice} VNĐ`);
                    label.attr("data-total-price", `${currentQuantity * currentSalePrice}`);
                });
                $(".btn-update-cart").on("click", function (e) {

                    var jqueryEle = $(e.target);
                    var productId = jqueryEle.attr("data-product-id");
                    var currentQuantity = $(`.product-order-quantity[data-product-id=${productId}]`).val();
                    var currentTotalPrice = $(`.product-total-price[data-product-id=${productId}]`).attr("data-total-price");
                    var product = listAllProducts.find((x) => x.id == productId);
                    product.cartQuantity = currentQuantity;
                    product.cartTotalPrice = currentTotalPrice;
                    updateCart(product);

                });
            }
        });
        /* End: init datatable products*/

        var updateCart = (product) => {
            removeElementFromCart(product.id)
            var appendAgainElement = createCartElement(product, product.cartQuantity, product.cartTotalPrice);
            $(".cart-ele-area").append(appendAgainElement);
            $("#cart-number-of-elements").text($(".cart-ele-area").children().length);
            $("#cart-all-price").text(calculateAllPrice());
        };



        /* Create cart element */
        var createCartElement = (data = {}, currentQuantity = 0, totalPrice = 0) => {
            var result =
                `<div class="ibox-content" data-cart-ele-id="${data.id}">
                <div class="table-responsive">
                    <table class="table shoping-cart-table">
                        <tbody>
                            <tr>
                                <td width="90">
                                    <div class="cart-product-imitation">
                                    </div>
                                </td>
                                <td class="desc">
                                    <h3><a href="#" class="text-navy" id="${data.id}-productname" data-product-name="${data.productName}">${data.productName}</a></h3>
                                    <dl class="small m-b-none">
                                        <dt>Description lists</dt>
                                        <dd>${data.description}</dd>
                                    </dl>
                                    <div class="m-t-sm">
                                        <a href="javascript:void(0)" onclick="removeCartElementHandler(this)" data-product-id="${data.id}" class="text-muted"><i class="fa fa-trash"></i> Xoá sản phẩm khỏi giỏ hàng</a>
                                    </div>
                                </td>
                                <td>
                                    <span id="${data.id}-saleprice">${data.salePrice}</span> VNĐ / 1
                                </td>
                                <td width="65">
                                    <input disabled="disabled" value="${currentQuantity}" id="${data.id}-quantity" class="form-control" />
                                </td>
                                <td>
                                    <h4 class="cart-ele-total-price">
                                        <span id="${data.id}-totalprice">${totalPrice}</span> VNĐ
                                    </h4>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>`;
            return result;
        };
    })();

    (async function () {
        try {
            var data = getTempDatas.GetAllCustomer;
            var optionEle = $("<option></option>");
            for (var customer of data) {

                optionEle.text(`${customer.lastName} ${customer.firstName}`);
                optionEle.val(customer.id);
                optionEle.appendTo("#customerId");

            }
            console.log(data);
        }
        catch (e) {
            alert("error");
            console.log(e);
        }
    })();</script>
}